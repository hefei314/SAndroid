plugins {
    id 'com.android.application'
}

android {
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.hefei.sandroid"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            // 移除无用的资源文件
            shrinkResources false
            // ZipAlign 优化
            zipAlignEnabled false
            // 设置混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            // 移除无用的资源文件
            shrinkResources true
            // ZipAlign 优化
            zipAlignEnabled true
            // 设置混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 执行配置
    applicationVariants.all { variant ->
        // Apk 输出配置
        variant.outputs.all { output ->
            outputFileName = variant.applicationId
            if (variant.buildType.name == buildTypes.debug.getName()) {
                outputFileName += '_' + variant.buildType.name
            }
            outputFileName += '_' + variant.versionName + '_' + variant.versionCode + "_" + buildTime() + '.apk'
        }
    }
}

static def buildTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["junitExt"]
    androidTestImplementation rootProject.ext.dependencies["espressoCore"]

    implementation project(':module_matisse')
    implementation project(':module_pay')

    // appcompat
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["annotation"]
    api rootProject.ext.dependencies["material"]
    api rootProject.ext.dependencies["cardview"]
    api rootProject.ext.dependencies["viewpager2"]
    api rootProject.ext.dependencies["recyclerview"]
    api rootProject.ext.dependencies["vectordrawable"]
    api rootProject.ext.dependencies["constraintLayout"]
    api rootProject.ext.dependencies["multidex"]
    // ViewModel and LiveData
    api rootProject.ext.dependencies["viewModel"]
    api rootProject.ext.dependencies["liveData"]
    // gson
    api rootProject.ext.dependencies["gson"]
    // logger
    api rootProject.ext.dependencies["logger"]
    // lombok
    compileOnly rootProject.ext.dependencies["lombok"]
    annotationProcessor rootProject.ext.dependencies["lombok"]
    // 工具类
    api rootProject.ext.dependencies["utilcode"]
    // 屏幕适配
    api rootProject.ext.dependencies["autosize"]
    // 沉浸式状态栏
    api rootProject.ext.dependencies["immersionbar"]
    // 图片框架
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glideCompiler"]
    // webView
    api rootProject.ext.dependencies["agentweb"]
    api rootProject.ext.dependencies["agentwebFilechooser"]
    api rootProject.ext.dependencies["agentwebDownloader"]
    // 应用更新
    api rootProject.ext.dependencies["updatePlugin"]
    // 弹窗
    api rootProject.ext.dependencies["xpopup"]
    // parts
    api rootProject.ext.dependencies["smartRefreshLayout"]
    api rootProject.ext.dependencies["smartRefreshHeaderClassics"]
    api rootProject.ext.dependencies["smartRefreshHeaderRadar"]
    api rootProject.ext.dependencies["smartRefreshHeaderFalsify"]
    api rootProject.ext.dependencies["smartRefreshHeaderMaterial"]
    api rootProject.ext.dependencies["smartRefreshHeaderTwoLevel"]
    api rootProject.ext.dependencies["smartRefreshFooterBall"]
    api rootProject.ext.dependencies["smartRefreshFooterClassics"]
    api rootProject.ext.dependencies["flexbox"]
    api rootProject.ext.dependencies["calendarview"]
    api rootProject.ext.dependencies["materialsearchview"]
    api rootProject.ext.dependencies["materialdatetimepicker"]
    // 加载动画
    api rootProject.ext.dependencies["lottie"]
    api rootProject.ext.dependencies["spinKit"]
    // PhotoView
    api rootProject.ext.dependencies["photoview"]
    // 倒计时
    implementation 'com.github.iwgang:countdownview:2.1.6'
    // RecyclerView适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    // 骨架屏
    implementation 'com.ethanhua:skeleton:1.1.2'
    implementation 'io.supercharge:shimmerlayout:2.1.0'
}